Traceback (most recent call last):
  File "C:\Users\jqbon\anaconda3\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\Users\jqbon\anaconda3\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\jqbon\anaconda3\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\jqbon\anaconda3\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\jqbon\anaconda3\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\Users\jqbon\anaconda3\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\jqbon\anaconda3\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\jqbon\anaconda3\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
k = lambda x: np.sin(10*np.pi*x)/2/x + (x - 1)**4
xplot = np.linspace(0.1, 2.5, 1000)
kplot = k(xplot)
plt.plot(xset, kplot)
plt.show()
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mValueError[0m                                Traceback (most recent call last)
[1;32m~\AppData\Local\Temp\ipykernel_152\3485460638.py[0m in [0;36m<module>[1;34m[0m
[0;32m      2[0m [0mxplot[0m [1;33m=[0m [0mnp[0m[1;33m.[0m[0mlinspace[0m[1;33m([0m[1;36m0.1[0m[1;33m,[0m [1;36m2.5[0m[1;33m,[0m [1;36m1000[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m      3[0m [0mkplot[0m [1;33m=[0m [0mk[0m[1;33m([0m[0mxplot[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m----> 4[1;33m [0mplt[0m[1;33m.[0m[0mplot[0m[1;33m([0m[0mxset[0m[1;33m,[0m [0mkplot[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m      5[0m [0mplt[0m[1;33m.[0m[0mshow[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\lib\site-packages\matplotlib\pyplot.py[0m in [0;36mplot[1;34m(scalex, scaley, data, *args, **kwargs)[0m
[0;32m   2765[0m [1;33m@[0m[0m_copy_docstring_and_deprecators[0m[1;33m([0m[0mAxes[0m[1;33m.[0m[0mplot[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m   2766[0m [1;32mdef[0m [0mplot[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m,[0m [0mscalex[0m[1;33m=[0m[1;32mTrue[0m[1;33m,[0m [0mscaley[0m[1;33m=[0m[1;32mTrue[0m[1;33m,[0m [0mdata[0m[1;33m=[0m[1;32mNone[0m[1;33m,[0m [1;33m**[0m[0mkwargs[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 2767[1;33m     return gca().plot(
[0m[0;32m   2768[0m         [1;33m*[0m[0margs[0m[1;33m,[0m [0mscalex[0m[1;33m=[0m[0mscalex[0m[1;33m,[0m [0mscaley[0m[1;33m=[0m[0mscaley[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m   2769[0m         **({"data": data} if data is not None else {}), **kwargs)

[1;32m~\anaconda3\lib\site-packages\matplotlib\axes\_axes.py[0m in [0;36mplot[1;34m(self, scalex, scaley, data, *args, **kwargs)[0m
[0;32m   1633[0m         """
[0;32m   1634[0m         [0mkwargs[0m [1;33m=[0m [0mcbook[0m[1;33m.[0m[0mnormalize_kwargs[0m[1;33m([0m[0mkwargs[0m[1;33m,[0m [0mmlines[0m[1;33m.[0m[0mLine2D[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 1635[1;33m         [0mlines[0m [1;33m=[0m [1;33m[[0m[1;33m*[0m[0mself[0m[1;33m.[0m[0m_get_lines[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m,[0m [0mdata[0m[1;33m=[0m[0mdata[0m[1;33m,[0m [1;33m**[0m[0mkwargs[0m[1;33m)[0m[1;33m][0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   1636[0m         [1;32mfor[0m [0mline[0m [1;32min[0m [0mlines[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1637[0m             [0mself[0m[1;33m.[0m[0madd_line[0m[1;33m([0m[0mline[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\lib\site-packages\matplotlib\axes\_base.py[0m in [0;36m__call__[1;34m(self, data, *args, **kwargs)[0m
[0;32m    310[0m                 [0mthis[0m [1;33m+=[0m [0margs[0m[1;33m[[0m[1;36m0[0m[1;33m][0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m    311[0m                 [0margs[0m [1;33m=[0m [0margs[0m[1;33m[[0m[1;36m1[0m[1;33m:[0m[1;33m][0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 312[1;33m             [1;32myield[0m [1;32mfrom[0m [0mself[0m[1;33m.[0m[0m_plot_args[0m[1;33m([0m[0mthis[0m[1;33m,[0m [0mkwargs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    313[0m [1;33m[0m[0m
[0;32m    314[0m     [1;32mdef[0m [0mget_next_color[0m[1;33m([0m[0mself[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\lib\site-packages\matplotlib\axes\_base.py[0m in [0;36m_plot_args[1;34m(self, tup, kwargs, return_kwargs)[0m
[0;32m    496[0m [1;33m[0m[0m
[0;32m    497[0m         [1;32mif[0m [0mx[0m[1;33m.[0m[0mshape[0m[1;33m[[0m[1;36m0[0m[1;33m][0m [1;33m!=[0m [0my[0m[1;33m.[0m[0mshape[0m[1;33m[[0m[1;36m0[0m[1;33m][0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 498[1;33m             raise ValueError(f"x and y must have same first dimension, but "
[0m[0;32m    499[0m                              f"have shapes {x.shape} and {y.shape}")
[0;32m    500[0m         [1;32mif[0m [0mx[0m[1;33m.[0m[0mndim[0m [1;33m>[0m [1;36m2[0m [1;32mor[0m [0my[0m[1;33m.[0m[0mndim[0m [1;33m>[0m [1;36m2[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;31mValueError[0m: x and y must have same first dimension, but have shapes (100,) and (1000,)
ValueError: x and y must have same first dimension, but have shapes (100,) and (1000,)

